#!/bin/bash

echo "----------------------------------------------------------------------"
echo "Starting tests..."
echo "----------------------------------------------------------------------"

while getopts t: flag
do
    case "${flag}" in
        t) target=${OPTARG};;
    esac
done

result=false
if [ "$target" = "" ]; then
    DOCKER_BUILDKIT=0 docker build -f Dockerfile.test . --rm -t mobydick_tests && result=true
else
    if [ $target = "unit_tests" ] || [ $target = "api_tests" ]; then
        DOCKER_BUILDKIT=0 docker build --target $target -f Dockerfile.test . --rm -t mobydick_tests && result=true
    else
        echo "ERROR: $target is not an available build stage. Please choose 'unit_tests' or 'api_tests'."
        exit 1
    fi
fi

if [ $result = false ]; then
    echo "----------------------------------------------------------------------"
    echo "Tests failed! :("
    echo "Cleaning up..."
    echo "----------------------------------------------------------------------"

    # fetching the last docker image (it is assumed that's our broken image)
    hanging_image_id=$(docker images | awk '{print $3}' | awk 'NR==2')
    # removing container that was running the broken image
    docker rm $(docker ps -a -q --filter "ancestor=$hanging_image_id")
    # removing broken image
    docker rmi $hanging_image_id

    echo "----------------------------------------------------------------------"
    echo "Completed clean up."
    echo "----------------------------------------------------------------------"
else
    echo "----------------------------------------------------------------------"
    echo "Completed tests successfully!"
    echo "Cleaning up..."
    echo "----------------------------------------------------------------------"

    docker rmi mobydick_tests

    echo "----------------------------------------------------------------------"
    echo "Completed tests and cleaned up successfully! Have a lovely day! :)"
    echo "----------------------------------------------------------------------"
fi